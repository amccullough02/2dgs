### YamlMime:ManagedReference
items:
- uid: _2dgs.KeyEnumConvertor
  commentId: T:_2dgs.KeyEnumConvertor
  id: KeyEnumConvertor
  parent: _2dgs
  children:
  - _2dgs.KeyEnumConvertor.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},System.Boolean,Newtonsoft.Json.JsonSerializer)
  - _2dgs.KeyEnumConvertor.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: KeyEnumConvertor
  nameWithType: KeyEnumConvertor
  fullName: _2dgs.KeyEnumConvertor
  type: Class
  source:
    remote:
      path: 2dgs/FileManagement/KeyEnumConvertor.cs
      branch: main
      repo: https://github.com/amccullough02/2dgs.git
    id: KeyEnumConvertor
    path: 2dgs/FileManagement/KeyEnumConvertor.cs
    startLine: 11
  assemblies:
  - 2dgs
  namespace: _2dgs
  summary: A custom JSONConvertor designed to convert MonoGame Keys to a string format than be serialized.
  example: []
  syntax:
    content: 'public class KeyEnumConvertor : JsonConverter<List<Keys>>'
    content.vb: Public Class KeyEnumConvertor Inherits JsonConverter(Of List(Of Keys))
  inheritance:
  - System.Object
  - Newtonsoft.Json.JsonConverter
  - Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  inheritedMembers:
  - Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.CanConvert(System.Type)
  - Newtonsoft.Json.JsonConverter.CanRead
  - Newtonsoft.Json.JsonConverter.CanWrite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: _2dgs.KeyEnumConvertor.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},Newtonsoft.Json.JsonSerializer)
  commentId: M:_2dgs.KeyEnumConvertor.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},Newtonsoft.Json.JsonSerializer)
  id: WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},Newtonsoft.Json.JsonSerializer)
  parent: _2dgs.KeyEnumConvertor
  langs:
  - csharp
  - vb
  name: WriteJson(JsonWriter, List<Keys>, JsonSerializer)
  nameWithType: KeyEnumConvertor.WriteJson(JsonWriter, List<Keys>, JsonSerializer)
  fullName: _2dgs.KeyEnumConvertor.WriteJson(Newtonsoft.Json.JsonWriter, System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: 2dgs/FileManagement/KeyEnumConvertor.cs
      branch: main
      repo: https://github.com/amccullough02/2dgs.git
    id: WriteJson
    path: 2dgs/FileManagement/KeyEnumConvertor.cs
    startLine: 20
  assemblies:
  - 2dgs
  namespace: _2dgs
  summary: Writes the list of MonoGame keys as an array of strings.
  example: []
  syntax:
    content: public override void WriteJson(JsonWriter writer, List<Keys> value, JsonSerializer serializer)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: The JSON.NET writer.
    - id: value
      type: System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}
      description: The value to be written.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: Controls JSON encoding.
    content.vb: Public Overrides Sub WriteJson(writer As JsonWriter, value As List(Of Keys), serializer As JsonSerializer)
  overridden: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},Newtonsoft.Json.JsonSerializer)
  overload: _2dgs.KeyEnumConvertor.WriteJson*
  nameWithType.vb: KeyEnumConvertor.WriteJson(JsonWriter, List(Of Keys), JsonSerializer)
  fullName.vb: _2dgs.KeyEnumConvertor.WriteJson(Newtonsoft.Json.JsonWriter, System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys), Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, List(Of Keys), JsonSerializer)
- uid: _2dgs.KeyEnumConvertor.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},System.Boolean,Newtonsoft.Json.JsonSerializer)
  commentId: M:_2dgs.KeyEnumConvertor.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},System.Boolean,Newtonsoft.Json.JsonSerializer)
  id: ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},System.Boolean,Newtonsoft.Json.JsonSerializer)
  parent: _2dgs.KeyEnumConvertor
  langs:
  - csharp
  - vb
  name: ReadJson(JsonReader, Type, List<Keys>, bool, JsonSerializer)
  nameWithType: KeyEnumConvertor.ReadJson(JsonReader, Type, List<Keys>, bool, JsonSerializer)
  fullName: _2dgs.KeyEnumConvertor.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>, bool, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: 2dgs/FileManagement/KeyEnumConvertor.cs
      branch: main
      repo: https://github.com/amccullough02/2dgs.git
    id: ReadJson
    path: 2dgs/FileManagement/KeyEnumConvertor.cs
    startLine: 41
  assemblies:
  - 2dgs
  namespace: _2dgs
  summary: Reads the array of strings and converts it back into a list of MonoGame keys.
  example: []
  syntax:
    content: public override List<Keys> ReadJson(JsonReader reader, Type objectType, List<Keys> existingValue, bool hasExistingValue, JsonSerializer serializer)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The JSON.NET reader.
    - id: objectType
      type: System.Type
      description: A generic type.
    - id: existingValue
      type: System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}
      description: The value being read from.
    - id: hasExistingValue
      type: System.Boolean
      description: If the value being read from exists.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: Controls JSON encoding.
    return:
      type: System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}
      description: A list of MonoGame keys.
    content.vb: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As List(Of Keys), hasExistingValue As Boolean, serializer As JsonSerializer) As List(Of Keys)
  overridden: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},System.Boolean,Newtonsoft.Json.JsonSerializer)
  overload: _2dgs.KeyEnumConvertor.ReadJson*
  nameWithType.vb: KeyEnumConvertor.ReadJson(JsonReader, Type, List(Of Keys), Boolean, JsonSerializer)
  fullName.vb: _2dgs.KeyEnumConvertor.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys), Boolean, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, List(Of Keys), Boolean, JsonSerializer)
references:
- uid: _2dgs
  commentId: N:_2dgs
  href: _2dgs.html
  name: _2dgs
  nameWithType: _2dgs
  fullName: _2dgs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Newtonsoft.Json.JsonConverter
  commentId: T:Newtonsoft.Json.JsonConverter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: Newtonsoft.Json.JsonConverter
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  commentId: T:Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  parent: Newtonsoft.Json
  definition: Newtonsoft.Json.JsonConverter`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: JsonConverter<List<Keys>>
  nameWithType: JsonConverter<List<Keys>>
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>>
  nameWithType.vb: JsonConverter(Of List(Of Keys))
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys))
  name.vb: JsonConverter(Of List(Of Keys))
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: )
  - name: )
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  definition: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: WriteJson(JsonWriter, object, JsonSerializer)
  nameWithType: JsonConverter<List<Keys>>.WriteJson(JsonWriter, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of List(Of Keys)).WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys)).WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  definition: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, object, JsonSerializer)
  nameWithType: JsonConverter<List<Keys>>.ReadJson(JsonReader, Type, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of List(Of Keys)).ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys)).ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.CanConvert(System.Type)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  definition: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CanConvert(Type)
  nameWithType: JsonConverter<List<Keys>>.CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of List(Of Keys)).CanConvert(Type)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys)).CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Newtonsoft.Json.JsonConverter.CanRead
  commentId: P:Newtonsoft.Json.JsonConverter.CanRead
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanRead
  nameWithType: JsonConverter.CanRead
  fullName: Newtonsoft.Json.JsonConverter.CanRead
- uid: Newtonsoft.Json.JsonConverter.CanWrite
  commentId: P:Newtonsoft.Json.JsonConverter.CanWrite
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanWrite
  nameWithType: JsonConverter.CanWrite
  fullName: Newtonsoft.Json.JsonConverter.CanWrite
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: Newtonsoft.Json.JsonConverter`1
  commentId: T:Newtonsoft.Json.JsonConverter`1
  isExternal: true
  name: JsonConverter<T>
  nameWithType: JsonConverter<T>
  fullName: Newtonsoft.Json.JsonConverter<T>
  nameWithType.vb: JsonConverter(Of T)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T)
  name.vb: JsonConverter(Of T)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: WriteJson(JsonWriter, object, JsonSerializer)
  nameWithType: JsonConverter<T>.WriteJson(JsonWriter, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, object, JsonSerializer)
  nameWithType: JsonConverter<T>.ReadJson(JsonReader, Type, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CanConvert(Type)
  nameWithType: JsonConverter<T>.CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter<T>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of T).CanConvert(Type)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  definition: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: WriteJson(JsonWriter, List<Keys>, JsonSerializer)
  nameWithType: JsonConverter<List<Keys>>.WriteJson(JsonWriter, List<Keys>, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>>.WriteJson(Newtonsoft.Json.JsonWriter, System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of List(Of Keys)).WriteJson(JsonWriter, List(Of Keys), JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys)).WriteJson(Newtonsoft.Json.JsonWriter, System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys), Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, List(Of Keys), JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: _2dgs.KeyEnumConvertor.WriteJson*
  commentId: Overload:_2dgs.KeyEnumConvertor.WriteJson
  href: _2dgs.KeyEnumConvertor.html#_2dgs_KeyEnumConvertor_WriteJson_Newtonsoft_Json_JsonWriter_System_Collections_Generic_List_Microsoft_Xna_Framework_Input_Keys__Newtonsoft_Json_JsonSerializer_
  name: WriteJson
  nameWithType: KeyEnumConvertor.WriteJson
  fullName: _2dgs.KeyEnumConvertor.WriteJson
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}
  commentId: T:System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Keys>
  nameWithType: List<Keys>
  fullName: System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>
  nameWithType.vb: List(Of Keys)
  fullName.vb: System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys)
  name.vb: List(Of Keys)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: )
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  name: WriteJson(JsonWriter, T, JsonSerializer)
  nameWithType: JsonConverter<T>.WriteJson(JsonWriter, T, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).WriteJson(JsonWriter, T, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},System.Boolean,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},System.Boolean,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  definition: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, List<Keys>, bool, JsonSerializer)
  nameWithType: JsonConverter<List<Keys>>.ReadJson(JsonReader, Type, List<Keys>, bool, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>, bool, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of List(Of Keys)).ReadJson(JsonReader, Type, List(Of Keys), Boolean, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys)).ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys), Boolean, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, List(Of Keys), Boolean, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter{System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys},System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: _2dgs.KeyEnumConvertor.ReadJson*
  commentId: Overload:_2dgs.KeyEnumConvertor.ReadJson
  href: _2dgs.KeyEnumConvertor.html#_2dgs_KeyEnumConvertor_ReadJson_Newtonsoft_Json_JsonReader_System_Type_System_Collections_Generic_List_Microsoft_Xna_Framework_Input_Keys__System_Boolean_Newtonsoft_Json_JsonSerializer_
  name: ReadJson
  nameWithType: KeyEnumConvertor.ReadJson
  fullName: _2dgs.KeyEnumConvertor.ReadJson
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  nameWithType: JsonConverter<T>.ReadJson(JsonReader, Type, T, bool, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, bool, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter(Of T).ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, Boolean, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, T, Boolean, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
